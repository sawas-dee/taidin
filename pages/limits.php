<?php
// pages/limits.php - ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏ó

$current_user = current_user();
if (!can($current_user, 'limits.view')) {
    set_alert('danger', '‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ô‡∏µ‡πâ');
    header('Location: ?page=dashboard');
    exit;
}

$db = DB::getInstance();
$current_draw_id = $_SESSION['current_draw_id'] ?? draw_current_id();
$current_draw = get_draw($current_draw_id);

if (!$current_draw) {
    echo '<div class="alert alert-warning">‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏ß‡∏î</div>';
    exit;
}

// Process form submissions
if ($_SERVER['REQUEST_METHOD'] === 'POST' && can($current_user, 'limits.edit')) {
    $action = $_POST['action'] ?? '';
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
    if ($action === 'save_standard') {
        foreach (LOTTERY_TYPES as $type => $config) {
            $max_total = $_POST['std_max_' . $type] ?? null;
            $rate_override = $_POST['std_rate_' . $type] ?? null;
            
            // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà = ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î/‡πÉ‡∏ä‡πâ default
            $max_total = $max_total !== '' ? floatval($max_total) : null;
            $rate_override = $rate_override !== '' ? floatval($rate_override) : null;
            
            // Check if exists
            $exists = $db->fetch(
                "SELECT id FROM limits_std WHERE draw_id = ? AND type = ?",
                [$current_draw_id, $type]
            );
            
            if ($exists) {
                // Update
                $db->update('limits_std',
                    ['max_total' => $max_total, 'rate_override' => $rate_override],
                    'draw_id = ? AND type = ?',
                    [$current_draw_id, $type]
                );
            } else if ($max_total !== null || $rate_override !== null) {
                // Insert only if has value
                $db->insert('limits_std', [
                    'draw_id' => $current_draw_id,
                    'type' => $type,
                    'max_total' => $max_total,
                    'rate_override' => $rate_override
                ]);
            }
        }
        
        set_alert('success', '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        header('Location: ?page=limits');
        exit;
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç
    if ($action === 'save_specific') {
        $type = $_POST['type'] ?? '';
        $numbers = $_POST['numbers'] ?? '';
        $max_total = $_POST['max_total'] ?? null;
        $rate_override = $_POST['rate_override'] ?? null;
        
        if ($type && $numbers) {
            // ‡πÅ‡∏¢‡∏Å‡πÄ‡∏•‡∏Ç‡∏î‡πâ‡∏ß‡∏¢ comma, space, newline
            $number_list = preg_split('/[\s,\n]+/', trim($numbers));
            $number_list = array_filter($number_list); // ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
            
            $max_total = $max_total !== '' ? floatval($max_total) : null;
            $rate_override = $rate_override !== '' ? floatval($rate_override) : null;
            
            $success_count = 0;
            $error_numbers = [];
            
            foreach ($number_list as $number) {
                // Validate number format
                if (!validate_lottery_number($number, $type)) {
                    $error_numbers[] = $number;
                    continue;
                }
                
                // Check if exists
                $exists = $db->fetch(
                    "SELECT id FROM limits_num WHERE draw_id = ? AND type = ? AND number = ?",
                    [$current_draw_id, $type, $number]
                );
                
                if ($exists) {
                    // Update
                    $db->update('limits_num',
                        ['max_total' => $max_total, 'rate_override' => $rate_override],
                        'draw_id = ? AND type = ? AND number = ?',
                        [$current_draw_id, $type, $number]
                    );
                } else {
                    // Insert
                    $db->insert('limits_num', [
                        'draw_id' => $current_draw_id,
                        'type' => $type,
                        'number' => $number,
                        'max_total' => $max_total,
                        'rate_override' => $rate_override
                    ]);
                }
                $success_count++;
            }
            
            if ($success_count > 0) {
                $msg = "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à $success_count ‡πÄ‡∏•‡∏Ç";
                if (!empty($error_numbers)) {
                    $msg .= " (‡πÄ‡∏•‡∏Ç‡∏ú‡∏¥‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: " . implode(', ', $error_numbers) . ")";
                }
                set_alert('success', $msg);
            } else {
                set_alert('danger', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
        } else {
            set_alert('danger', '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏•‡∏∞‡πÉ‡∏™‡πà‡πÄ‡∏•‡∏Ç');
        }
        
        header('Location: ?page=limits');
        exit;
    }
    
    // ‡∏•‡∏ö‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç
    if ($action === 'delete_specific' && can($current_user, 'limits.delete')) {
        $id = intval($_POST['id'] ?? 0);
        if ($id) {
            $db->delete('limits_num', 'id = ? AND draw_id = ?', [$id, $current_draw_id]);
            set_alert('success', '‡∏•‡∏ö‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
        }
        header('Location: ?page=limits');
        exit;
    }
}

// Get current limits
$standard_limits = [];
foreach (LOTTERY_TYPES as $type => $config) {
    $limit = $db->fetch(
        "SELECT * FROM limits_std WHERE draw_id = ? AND type = ?",
        [$current_draw_id, $type]
    );
    $standard_limits[$type] = $limit ?: ['max_total' => null, 'rate_override' => null];
}

$specific_limits = $db->fetchAll(
    "SELECT * FROM limits_num WHERE draw_id = ? ORDER BY type, number",
    [$current_draw_id]
);

// Get default settings
$default_rates = [];
foreach (LOTTERY_TYPES as $type => $config) {
    $default_rates[$type] = default_rate($type);
}
?>

<h1 class="mb-3">‚öôÔ∏è ‡∏≠‡∏±‡πâ‡∏ô‡πÄ‡∏•‡∏Ç/‡πÄ‡∏£‡∏ó‡∏à‡πà‡∏≤‡∏¢ - <?= escape($current_draw['name']) ?></h1>

<div class="alert alert-info">
    <strong>üìå ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:</strong><br>
    <strong>‡∏•‡∏¥‡∏°‡∏¥‡∏ï:</strong> ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç ‚Üí ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏ä‡∏ô‡∏¥‡∏î ‚Üí ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î<br>
    <strong>‡πÄ‡∏£‡∏ó‡∏à‡πà‡∏≤‡∏¢:</strong> ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç ‚Üí ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏ä‡∏ô‡∏¥‡∏î ‚Üí ‡∏Ñ‡πà‡∏≤ default (<?= implode(', ', array_map(function($t, $r) {
        return LOTTERY_TYPES[$t]['name'] . " = $r";
    }, array_keys($default_rates), $default_rates)) ?>)
</div>

<!-- ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô -->
<div class="card">
    <div class="card-header">
        <h3 class="card-title">üìä ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏á‡∏ß‡∏î</h3>
    </div>
    
    <?php if (can($current_user, 'limits.edit')): ?>
    <form method="POST">
        <input type="hidden" name="action" value="save_standard">
        
        <table class="table">
            <thead>
                <tr>
                    <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                    <th>‡∏¢‡∏≠‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏ö‡∏≤‡∏ó)</th>
                    <th>‡πÄ‡∏£‡∏ó‡∏à‡πà‡∏≤‡∏¢ Override</th>
                    <th>‡πÄ‡∏£‡∏ó Default</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach (LOTTERY_TYPES as $type => $config): ?>
                <tr>
                    <td>
                        <strong><?= escape($config['name']) ?></strong>
                    </td>
                    <td>
                        <input type="number" name="std_max_<?= $type ?>" 
                               value="<?= $standard_limits[$type]['max_total'] ?>"
                               class="form-control" placeholder="‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î"
                               min="0" step="100">
                    </td>
                    <td>
                        <input type="number" name="std_rate_<?= $type ?>" 
                               value="<?= $standard_limits[$type]['rate_override'] ?>"
                               class="form-control" placeholder="‡πÉ‡∏ä‡πâ default"
                               min="0" step="10">
                    </td>
                    <td class="text-muted">
                        <?= format_number($default_rates[$type], 0) ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
        
        <div class="p-3">
            <button type="submit" class="btn btn-primary">
                üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
            </button>
            <small class="text-muted" style="margin-left: 1rem;">
                * ‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÑ‡∏ß‡πâ = ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î/‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ default
            </small>
        </div>
    </form>
    <?php else: ?>
        <table class="table">
            <thead>
                <tr>
                    <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                    <th>‡∏¢‡∏≠‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î</th>
                    <th>‡πÄ‡∏£‡∏ó‡∏à‡πà‡∏≤‡∏¢</th>
                </tr>
            </thead>
            <tbody>
                <?php foreach (LOTTERY_TYPES as $type => $config): ?>
                <tr>
                    <td><?= escape($config['name']) ?></td>
                    <td>
                        <?= $standard_limits[$type]['max_total'] 
                            ? '‡∏ø ' . format_number($standard_limits[$type]['max_total']) 
                            : '‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î' ?>
                    </td>
                    <td>
                        <?= $standard_limits[$type]['rate_override'] 
                            ? format_number($standard_limits[$type]['rate_override'], 0)
                            : '‡πÉ‡∏ä‡πâ default (' . $default_rates[$type] . ')' ?>
                    </td>
                </tr>
                <?php endforeach; ?>
            </tbody>
        </table>
    <?php endif; ?>
</div>

<!-- ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç -->
<div class="grid grid-2">
    <!-- ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏° -->
    <?php if (can($current_user, 'limits.add')): ?>
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç</h3>
        </div>
        
        <form method="POST">
            <input type="hidden" name="action" value="save_specific">
            
            <div class="form-group">
                <label class="form-label">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</label>
                <select name="type" class="form-control" required>
                    <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó --</option>
                    <?php foreach (LOTTERY_TYPES as $type => $config): ?>
                        <option value="<?= $type ?>">
                            <?= escape($config['name']) ?> (<?= $config['digits'] ?> ‡∏´‡∏•‡∏±‡∏Å)
                        </option>
                    <?php endforeach; ?>
                </select>
            </div>
            
            <div class="form-group">
                <label class="form-label">‡πÄ‡∏•‡∏Ç (‡∏Ñ‡∏±‡πà‡∏ô‡∏î‡πâ‡∏ß‡∏¢ comma ‡∏´‡∏£‡∏∑‡∏≠‡∏Ç‡∏∂‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡∏°‡πà)</label>
                <textarea name="numbers" class="form-control" rows="4" 
                          placeholder="‡πÄ‡∏ä‡πà‡∏ô 12,34,56 ‡∏´‡∏£‡∏∑‡∏≠&#10;12&#10;34&#10;56" required></textarea>
            </div>
            
            <div class="form-group">
                <label class="form-label">‡∏¢‡∏≠‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î (‡∏ö‡∏≤‡∏ó)</label>
                <input type="number" name="max_total" class="form-control" 
                       placeholder="‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á = ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô" min="0" step="100">
            </div>
            
            <div class="form-group">
                <label class="form-label">‡πÄ‡∏£‡∏ó‡∏à‡πà‡∏≤‡∏¢ Override</label>
                <input type="number" name="rate_override" class="form-control" 
                       placeholder="‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á = ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô" min="0" step="10">
            </div>
            
            <button type="submit" class="btn btn-primary">
                ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏¥‡∏°‡∏¥‡∏ï
            </button>
        </form>
    </div>
    <?php endif; ?>
    
    <!-- ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">
                üìã ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç 
                <span class="badge badge-info"><?= count($specific_limits) ?></span>
            </h3>
        </div>
        
        <div style="max-height: 500px; overflow-y: auto;">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</th>
                        <th>‡πÄ‡∏•‡∏Ç</th>
                        <th>‡∏¢‡∏≠‡∏î‡∏£‡∏±‡∏ö</th>
                        <th>‡πÄ‡∏£‡∏ó</th>
                        <?php if (can($current_user, 'limits.delete')): ?>
                        <th width="60"></th>
                        <?php endif; ?>
                    </tr>
                </thead>
                <tbody>
                    <?php foreach ($specific_limits as $limit): ?>
                    <tr>
                        <td>
                            <small><?= escape(LOTTERY_TYPES[$limit['type']]['name'] ?? $limit['type']) ?></small>
                        </td>
                        <td>
                            <strong style="font-size: 1.1em; color: var(--primary);">
                                <?= escape($limit['number']) ?>
                            </strong>
                        </td>
                        <td>
                            <?= $limit['max_total'] !== null
                                ? '‡∏ø ' . format_number($limit['max_total']) 
                                : '<span class="text-muted">‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô</span>' ?>
                        </td>
                        <td>
                            <?= $limit['rate_override'] !== null
                                ? 'x' . format_number($limit['rate_override'], 0)
                                : '<span class="text-muted">‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô</span>' ?>
                        </td>
                        <?php if (can($current_user, 'limits.delete')): ?>
                        <td>
                            <form method="POST" style="display: inline;">
                                <input type="hidden" name="action" value="delete_specific">
                                <input type="hidden" name="id" value="<?= $limit['id'] ?>">
                                <button type="submit" class="btn btn-sm btn-danger"
                                        onclick="return confirm('‡∏•‡∏ö‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏•‡∏Ç <?= $limit['number'] ?>?')">
                                    ‡∏•‡∏ö
                                </button>
                            </form>
                        </td>
                        <?php endif; ?>
                    </tr>
                    <?php endforeach; ?>
                    
                    <?php if (empty($specific_limits)): ?>
                    <tr>
                        <td colspan="5" class="text-center text-muted">
                            ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç
                        </td>
                    </tr>
                    <?php endif; ?>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- ‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏°‡∏¥‡∏ï -->
<div class="card mt-3">
    <div class="card-header">
        <h3 class="card-title">üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h3>
    </div>
    
    <div class="grid grid-3">
        <?php 
        // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
        $grouped_limits = [];
        foreach ($specific_limits as $limit) {
            $grouped_limits[$limit['type']][] = $limit;
        }
        ?>
        
        <?php foreach (LOTTERY_TYPES as $type => $config): ?>
        <div>
            <h4><?= escape($config['name']) ?></h4>
            
            <div class="mb-2">
                <small class="text-muted">‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô:</small><br>
                <?php if ($standard_limits[$type]['max_total'] !== null): ?>
                    <span class="badge badge-warning">
                        ‡∏≠‡∏±‡πâ‡∏ô ‡∏ø<?= format_number($standard_limits[$type]['max_total'], 0) ?>
                    </span>
                <?php endif; ?>
                <?php if ($standard_limits[$type]['rate_override'] !== null): ?>
                    <span class="badge badge-info">
                        ‡πÄ‡∏£‡∏ó x<?= format_number($standard_limits[$type]['rate_override'], 0) ?>
                    </span>
                <?php endif; ?>
                <?php if ($standard_limits[$type]['max_total'] === null && $standard_limits[$type]['rate_override'] === null): ?>
                    <span class="text-muted">‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á</span>
                <?php endif; ?>
            </div>
            
            <?php if (isset($grouped_limits[$type])): ?>
                <small class="text-muted">‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç (<?= count($grouped_limits[$type]) ?> ‡πÄ‡∏•‡∏Ç):</small><br>
                <div style="max-height: 150px; overflow-y: auto;">
                    <?php foreach ($grouped_limits[$type] as $limit): ?>
                        <span class="badge badge-success" style="margin: 2px;">
                            <?= $limit['number'] ?>
                            <?php if ($limit['max_total'] !== null): ?>
                                (‡∏ø<?= format_number($limit['max_total'], 0) ?>)
                            <?php endif; ?>
                        </span>
                    <?php endforeach; ?>
                </div>
            <?php else: ?>
                <small class="text-muted">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏•‡∏Ç</small>
            <?php endif; ?>
        </div>
        <?php endforeach; ?>
    </div>
</div>

<script>
// Auto format numbers in textarea
document.querySelector('textarea[name="numbers"]')?.addEventListener('input', function(e) {
    // Auto format as user types
    let value = e.target.value;
    
    // Replace spaces with commas
    value = value.replace(/\s+/g, ',');
    
    // Show formatted preview
    const type = document.querySelector('select[name="type"]').value;
    if (type) {
        const digits = type.includes('3') ? 3 : 2;
        const numbers = value.split(/[,\n]+/).filter(n => n.length === digits);
        
        if (numbers.length > 0) {
            const preview = numbers.slice(0, 5).join(', ');
            const more = numbers.length > 5 ? ` ... ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡∏Å ${numbers.length - 5} ‡πÄ‡∏•‡∏Ç` : '';
            
            // You could show this in a preview element
            console.log('Numbers to add:', preview + more);
        }
    }
});

// Validate before submit
document.querySelector('form').addEventListener('submit', function(e) {
    const action = this.querySelector('input[name="action"]').value;
    
    if (action === 'save_specific') {
        const type = this.querySelector('select[name="type"]').value;
        const numbers = this.querySelector('textarea[name="numbers"]').value;
        
        if (!type || !numbers.trim()) {
            e.preventDefault();
            Swal.fire('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö', '', 'warning');
            return false;
        }
        
        // Validate number format
        const digits = type.includes('3') ? 3 : 2;
        const numberList = numbers.split(/[,\s\n]+/).filter(n => n);
        const validNumbers = numberList.filter(n => new RegExp(`^\\d{${digits}}
        
</script>